Otherwise/If - making it implicitly detect when chained else if's were occurring.

End - we didn't like enforcing white spaces like in python, but then didn't want 
      curly braces either, so we emulated Ruby and used "End" to signify a closed If Block.
      Then when it came to implementation we found that a simple one line If statement was 
      sufficient, easier to implement, and more Domain Specific

Capitalizing - We wanted the sentences to be read more like English, so we force capitalizing
               of all statements other than section titles that are user defined.

Commenting - We added commenting more easily into the grammar after having done the grammar_orig.txt

Go vs Move - We weer interchangeably using "go" vs "move", and decided to stick with "go"

Do - we almost had functions. But realized that do should just be a "go to" in essence. We don't want
     to build stacks and that functionality would be too far away from our Specific in DSL.

Starting a section and Do a section had to be two word commands to trick scala into letting us
use spaces instead of dots. So we ended up with Start Section 
"section name" and Do Section "section name". We also had to use 
Strings for section names (so surrounded in quotes") because Scala 
will barf on undefined variable names floating around.

Because of the limits of our host language, predeclaring sections, IF and whilst all use comma separated function call style (with parentheses)

We had issues with statement referring to sections that hadn't been made yet. So we were forced to
require the user to predeclare all the sections they will use.

We went through several iterations of refactoring our code. There 
was way more ugliness when we started. A lot of hard coded rules and 
even more ugly var's being used. Some of it was unavoidable. Like 
using two words to avoid semicolons and dots, like New Section, 
tricking it by making Section a method of object New. 
PostfixOperators like this don't work on regular functions. 
Unfortunately we couldn't avoid some semi-necessary 
semi-colons.

'while' is a keyword in Scala, so we had to change it to be something else, we chose 'whilst'



